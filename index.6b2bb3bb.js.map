{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\n// 'use strict';\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac6739cbe5bf1c84$export$ccedaf978f62b9dd(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\nfunction $f86983e96b0c893e$export$6b10452b5ac97eba(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $ea91727f98d0802f$export$1002c20f28174dbf(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$6b10452b5ac97eba)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\nvar $3d28d7f1aac198f5$var$INITIAL_SCORE = 0;\nvar $3d28d7f1aac198f5$var$INITIAL_STATE = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar $3d28d7f1aac198f5$var$STATUS_IDLE = \"idle\";\nvar $3d28d7f1aac198f5$var$STATUS_PLAYING = \"playing\";\nvar $3d28d7f1aac198f5$var$STATUS_WIN = \"win\";\nvar $3d28d7f1aac198f5$var$STATUS_LOSE = \"lose\";\nvar $3d28d7f1aac198f5$var$FOUR_PROBABILITY = 0.1;\nfunction $3d28d7f1aac198f5$var$cloneState(state) {\n    return state.map(function(arr) {\n        return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(arr);\n    });\n}\nfunction $3d28d7f1aac198f5$var$normalize(value) {\n    if (value > 0) return 1;\n    if (value < 0) return -1;\n    return 0;\n}\nfunction $3d28d7f1aac198f5$var$getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\nvar $3d28d7f1aac198f5$var$_checkGameBoard = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_getEmptyCells = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_randomSpawn = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_moveColumnWithOffset = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_moveRowWithOffset = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_moveWithOffset = /*#__PURE__*/ new WeakSet();\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $3d28d7f1aac198f5$var$INITIAL_STATE;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_checkGameBoard);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_getEmptyCells);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_randomSpawn);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_moveColumnWithOffset);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_moveRowWithOffset);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_moveWithOffset);\n        this.initialState = $3d28d7f1aac198f5$var$cloneState(initialState);\n        this.state = initialState;\n        this.score = $3d28d7f1aac198f5$var$INITIAL_SCORE;\n        this.status = $3d28d7f1aac198f5$var$STATUS_IDLE;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_moveWithOffset, $3d28d7f1aac198f5$var$moveWithOffset).call(this, 1);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_moveWithOffset, $3d28d7f1aac198f5$var$moveWithOffset).call(this, -1);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_moveWithOffset, $3d28d7f1aac198f5$var$moveWithOffset).call(this, 0, 1);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_moveWithOffset, $3d28d7f1aac198f5$var$moveWithOffset).call(this, 0, -1);\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.restart();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.status = $3d28d7f1aac198f5$var$STATUS_PLAYING;\n                this.state = $3d28d7f1aac198f5$var$cloneState(this.initialState);\n                this.score = $3d28d7f1aac198f5$var$INITIAL_SCORE;\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_randomSpawn, $3d28d7f1aac198f5$var$randomSpawn).call(this);\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_randomSpawn, $3d28d7f1aac198f5$var$randomSpawn).call(this);\n            }\n        }\n    ]);\n    return Game;\n}();\nfunction $3d28d7f1aac198f5$var$checkGameBoard() {\n    var hasAvailableMoves = false;\n    for(var row = 0; row < this.state.length; row++)for(var column = 0; column < this.state[row].length; column++){\n        if (this.state[row][column] === 2048) {\n            this.status = $3d28d7f1aac198f5$var$STATUS_WIN;\n            return;\n        }\n        if (this.state[row + 1] && this.state[row][column] === this.state[row + 1][column] || this.state[row][column + 1] && this.state[row][column] === this.state[row][column + 1]) hasAvailableMoves = true;\n    }\n    if (!hasAvailableMoves) this.status = $3d28d7f1aac198f5$var$STATUS_LOSE;\n}\nfunction $3d28d7f1aac198f5$var$getEmptyCells() {\n    var emptyCells = [];\n    for(var row = 0; row < this.state.length; row++)for(var column = 0; column < this.state[row].length; column++){\n        var cellValue = this.state[row][column];\n        if (cellValue === 0) emptyCells.push([\n            row,\n            column\n        ]);\n    }\n    return emptyCells;\n}\nfunction $3d28d7f1aac198f5$var$randomSpawn() {\n    var emptyCells = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_getEmptyCells, $3d28d7f1aac198f5$var$getEmptyCells).call(this);\n    var randomEmptyCell = emptyCells[$3d28d7f1aac198f5$var$getRandomInt(emptyCells.length)];\n    this.state[randomEmptyCell[0]][randomEmptyCell[1]] = Math.random() <= $3d28d7f1aac198f5$var$FOUR_PROBABILITY ? 4 : 2;\n}\nfunction $3d28d7f1aac198f5$var$moveColumnWithOffset(offset) {\n    var columnStart = offset > 0 ? 0 : this.state.length - 1;\n    var columnStep = $3d28d7f1aac198f5$var$normalize(offset);\n    for(var row = 0; row < this.state.length; row++){\n        var currentRow = this.state[row];\n        for(var column = columnStart; column < currentRow.length && column >= 0; column += columnStep){\n            var shouldNotAdd = new Array(currentRow[column].length).fill(false);\n            var nextColumnStart = offset > 0 ? column + 1 : column - 1;\n            for(var column2 = nextColumnStart; column2 < currentRow.length && column2 >= 0; column2 += columnStep){\n                if (currentRow[column] === 0 && currentRow[column2] !== 0) {\n                    currentRow[column] = currentRow[column2];\n                    currentRow[column2] = 0;\n                    continue;\n                }\n                if (currentRow[column] !== 0 && currentRow[column] === currentRow[column2] && !shouldNotAdd[row]) {\n                    currentRow[column] += currentRow[column2];\n                    shouldNotAdd[row] = true;\n                    this.score += currentRow[column];\n                    currentRow[column2] = 0;\n                }\n                if (currentRow[column] !== 0 && currentRow[column2] !== 0 && currentRow[column] !== currentRow[column2]) shouldNotAdd[row] = true;\n            }\n        }\n    }\n}\nfunction $3d28d7f1aac198f5$var$moveRowWithOffset(offset) {\n    var rowStart = offset > 0 ? 0 : this.state.length - 1;\n    var rowStep = $3d28d7f1aac198f5$var$normalize(offset);\n    for(var row = rowStart; row < this.state.length && row >= 0; row += rowStep){\n        var shouldNotAdd = new Array(this.state[row].length).fill(false);\n        var currentRow = this.state[row];\n        var nextRowStart = offset > 0 ? row + 1 : row - 1;\n        for(var row2 = nextRowStart; row2 < this.state.length && row2 >= 0; row2 += rowStep){\n            var nextRow = this.state[row2];\n            for(var column = 0; column < currentRow.length; column++){\n                if (currentRow[column] === 0 && nextRow[column] !== 0) {\n                    currentRow[column] = nextRow[column];\n                    nextRow[column] = 0;\n                    continue;\n                }\n                if (currentRow[column] !== 0 && currentRow[column] === nextRow[column] && !shouldNotAdd[column]) {\n                    currentRow[column] += nextRow[column];\n                    shouldNotAdd[column] = true;\n                    this.score += currentRow[column];\n                    nextRow[column] = 0;\n                    continue;\n                }\n                if (currentRow[column] !== 0 && nextRow[column] !== 0 && currentRow[column] !== nextRow[column]) shouldNotAdd[column] = true;\n            }\n        }\n    }\n}\nfunction $3d28d7f1aac198f5$var$moveWithOffset(offsetColumn) {\n    var offsetRow = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n    if (this.status !== \"playing\" && this.status !== \"idle\") return;\n    var lastState = this.state.toString();\n    if (offsetRow) (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_moveRowWithOffset, $3d28d7f1aac198f5$var$moveRowWithOffset).call(this, offsetRow);\n    else (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_moveColumnWithOffset, $3d28d7f1aac198f5$var$moveColumnWithOffset).call(this, offsetColumn);\n    (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_checkGameBoard, $3d28d7f1aac198f5$var$checkGameBoard).call(this);\n    if (lastState === this.state.toString()) return;\n    (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_randomSpawn, $3d28d7f1aac198f5$var$randomSpawn).call(this);\n}\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$rows = document.querySelectorAll(\".field-row\");\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$BUTTON_RESTART = \"Restart\";\nvar $197cd56b15c33885$var$BUTTON_CLASS_RESTART = \"restart\";\nvar $197cd56b15c33885$var$BUTTON_START = \"Start\";\nvar $197cd56b15c33885$var$BUTTON_CLASS_START = \"start\";\nvar $197cd56b15c33885$var$showStartButton = true;\nfunction $197cd56b15c33885$var$update() {\n    var state = $197cd56b15c33885$var$game.getState();\n    for(var row = 0; row < state.length; row++)for(var column = 0; column < state[row].length; column++){\n        var value = state[row][column];\n        if (value < 2 || value % 2 !== 0) {\n            $197cd56b15c33885$var$rows[row].children[column].replaceChildren();\n            continue;\n        }\n        var newCell = document.createElement(\"div\");\n        newCell.textContent = value;\n        newCell.classList.add(\"field-cell\", \"field-cell--\".concat(value));\n        $197cd56b15c33885$var$rows[row].children[column].replaceChildren(newCell);\n    }\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case \"playing\":\n            $197cd56b15c33885$var$button.textContent = $197cd56b15c33885$var$BUTTON_RESTART;\n            $197cd56b15c33885$var$button.classList.remove($197cd56b15c33885$var$BUTTON_CLASS_START);\n            $197cd56b15c33885$var$button.classList.add($197cd56b15c33885$var$BUTTON_CLASS_RESTART);\n            $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n            break;\n        case \"lose\":\n            $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n            break;\n        case \"win\":\n            $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n            break;\n        default:\n            break;\n    }\n    if ($197cd56b15c33885$var$showStartButton) {\n        $197cd56b15c33885$var$button.textContent = $197cd56b15c33885$var$BUTTON_START;\n        $197cd56b15c33885$var$button.classList.remove($197cd56b15c33885$var$BUTTON_CLASS_RESTART);\n        $197cd56b15c33885$var$button.classList.add($197cd56b15c33885$var$BUTTON_CLASS_START);\n    }\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\" && !$197cd56b15c33885$var$showStartButton && confirm(\"Are you sure you want to restart the game?\")) $197cd56b15c33885$var$game.restart();\n    else if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$update();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var pressedArrows = true;\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            pressedArrows = false;\n    }\n    if (pressedArrows) {\n        $197cd56b15c33885$var$showStartButton = false;\n        $197cd56b15c33885$var$update();\n    }\n});\ndocument.addEventListener(\"touchstart\", $197cd56b15c33885$var$handleTouchStart, false);\ndocument.addEventListener(\"touchmove\", $197cd56b15c33885$var$handleTouchMove, false);\nvar $197cd56b15c33885$var$xDown = null;\nvar $197cd56b15c33885$var$yDown = null;\nfunction $197cd56b15c33885$var$getTouches(evt) {\n    return evt.touches || // browser API\n    evt.originalEvent.touches; // jQuery\n}\nfunction $197cd56b15c33885$var$handleTouchStart(evt) {\n    var firstTouch = $197cd56b15c33885$var$getTouches(evt)[0];\n    $197cd56b15c33885$var$xDown = firstTouch.clientX;\n    $197cd56b15c33885$var$yDown = firstTouch.clientY;\n}\nfunction $197cd56b15c33885$var$handleTouchMove(evt) {\n    if (!$197cd56b15c33885$var$xDown || !$197cd56b15c33885$var$yDown) return;\n    var xUp = evt.touches[0].clientX;\n    var yUp = evt.touches[0].clientY;\n    var xDiff = $197cd56b15c33885$var$xDown - xUp;\n    var yDiff = $197cd56b15c33885$var$yDown - yUp;\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\n        if (xDiff > 0) $197cd56b15c33885$var$game.moveLeft();\n        else $197cd56b15c33885$var$game.moveRight();\n    } else if (yDiff > 0) $197cd56b15c33885$var$game.moveUp();\n    else $197cd56b15c33885$var$game.moveDown();\n    $197cd56b15c33885$var$update();\n    $197cd56b15c33885$var$xDown = null;\n    $197cd56b15c33885$var$yDown = null;\n}\n\n})();\n//# sourceMappingURL=index.6b2bb3bb.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst rows = document.querySelectorAll('.field-row');\nconst button = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst BUTTON_RESTART = 'Restart';\nconst BUTTON_CLASS_RESTART = 'restart';\nconst BUTTON_START = 'Start';\nconst BUTTON_CLASS_START = 'start';\n\nlet showStartButton = true;\n\nfunction update() {\n  const state = game.getState();\n\n  for (let row = 0; row < state.length; row++) {\n    for (let column = 0; column < state[row].length; column++) {\n      const value = state[row][column];\n\n      if (value < 2 || value % 2 !== 0) {\n        rows[row].children[column].replaceChildren();\n        continue;\n      }\n\n      const newCell = document.createElement('div');\n\n      newCell.textContent = value;\n      newCell.classList.add('field-cell', `field-cell--${value}`);\n\n      rows[row].children[column].replaceChildren(newCell);\n    }\n  }\n\n  switch (game.getStatus()) {\n    case 'playing':\n      button.textContent = BUTTON_RESTART;\n      button.classList.remove(BUTTON_CLASS_START);\n      button.classList.add(BUTTON_CLASS_RESTART);\n\n      messageStart.classList.add('hidden');\n      messageWin.classList.add('hidden');\n      messageLose.classList.add('hidden');\n\n      break;\n    case 'lose':\n      messageLose.classList.remove('hidden');\n\n      break;\n    case 'win':\n      messageWin.classList.remove('hidden');\n\n      break;\n    default:\n      break;\n  }\n\n  if (showStartButton) {\n    button.textContent = BUTTON_START;\n    button.classList.remove(BUTTON_CLASS_RESTART);\n    button.classList.add(BUTTON_CLASS_START);\n  }\n\n  gameScore.textContent = game.getScore();\n}\n\nbutton.addEventListener('click', () => {\n  if (\n    game.getStatus() === 'playing' &&\n    !showStartButton &&\n    confirm('Are you sure you want to restart the game?')\n  ) {\n    game.restart();\n  } else if (game.getStatus() !== 'playing') {\n    game.start();\n  }\n\n  update();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  let pressedArrows = true;\n\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n      pressedArrows = false;\n  }\n\n  if (pressedArrows) {\n    showStartButton = false;\n    update();\n  }\n});\n\ndocument.addEventListener('touchstart', handleTouchStart, false);\ndocument.addEventListener('touchmove', handleTouchMove, false);\n\nlet xDown = null;\nlet yDown = null;\n\nfunction getTouches(evt) {\n  return (\n    evt.touches || // browser API\n    evt.originalEvent.touches\n  ); // jQuery\n}\n\nfunction handleTouchStart(evt) {\n  const firstTouch = getTouches(evt)[0];\n\n  xDown = firstTouch.clientX;\n  yDown = firstTouch.clientY;\n}\n\nfunction handleTouchMove(evt) {\n  if (!xDown || !yDown) {\n    return;\n  }\n\n  const xUp = evt.touches[0].clientX;\n  const yUp = evt.touches[0].clientY;\n\n  const xDiff = xDown - xUp;\n  const yDiff = yDown - yUp;\n\n  if (Math.abs(xDiff) > Math.abs(yDiff)) {\n    if (xDiff > 0) {\n      game.moveLeft();\n    } else {\n      game.moveRight();\n    }\n  } else {\n    if (yDiff > 0) {\n      game.moveUp();\n    } else {\n      game.moveDown();\n    }\n  }\n\n  update();\n\n  xDown = null;\n  yDown = null;\n}\n","// 'use strict';\n\nconst INITIAL_SCORE = 0;\nconst INITIAL_STATE = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nconst STATUS_IDLE = 'idle';\nconst STATUS_PLAYING = 'playing';\nconst STATUS_WIN = 'win';\nconst STATUS_LOSE = 'lose';\n\nconst FOUR_PROBABILITY = 0.1;\n\nfunction cloneState(state) {\n  return state.map((arr) => [...arr]);\n}\n\nfunction normalize(value) {\n  if (value > 0) {\n    return 1;\n  }\n\n  if (value < 0) {\n    return -1;\n  }\n\n  return 0;\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n\n  constructor(initialState = INITIAL_STATE) {\n    this.initialState = cloneState(initialState);\n\n    this.state = initialState;\n    this.score = INITIAL_SCORE;\n    this.status = STATUS_IDLE;\n  }\n\n  #checkGameBoard() {\n    let hasAvailableMoves = false;\n\n    for (let row = 0; row < this.state.length; row++) {\n      for (let column = 0; column < this.state[row].length; column++) {\n        if (this.state[row][column] === 2048) {\n          this.status = STATUS_WIN;\n\n          return;\n        }\n\n        if (\n          (this.state[row + 1] &&\n            this.state[row][column] === this.state[row + 1][column]) ||\n          (this.state[row][column + 1] &&\n            this.state[row][column] === this.state[row][column + 1])\n        ) {\n          hasAvailableMoves = true;\n        }\n      }\n    }\n\n    if (!hasAvailableMoves) {\n      this.status = STATUS_LOSE;\n    }\n  }\n\n  #getEmptyCells() {\n    const emptyCells = [];\n\n    for (let row = 0; row < this.state.length; row++) {\n      for (let column = 0; column < this.state[row].length; column++) {\n        const cellValue = this.state[row][column];\n\n        if (cellValue === 0) {\n          emptyCells.push([row, column]);\n        }\n      }\n    }\n\n    return emptyCells;\n  }\n\n  #randomSpawn() {\n    const emptyCells = this.#getEmptyCells();\n\n    const randomEmptyCell = emptyCells[getRandomInt(emptyCells.length)];\n\n    this.state[randomEmptyCell[0]][randomEmptyCell[1]] =\n      Math.random() <= FOUR_PROBABILITY ? 4 : 2;\n  }\n\n  #moveColumnWithOffset(offset) {\n    const columnStart = offset > 0 ? 0 : this.state.length - 1;\n    const columnStep = normalize(offset);\n\n    for (let row = 0; row < this.state.length; row++) {\n      const currentRow = this.state[row];\n\n      for (\n        let column = columnStart;\n        column < currentRow.length && column >= 0;\n        column += columnStep\n      ) {\n        const shouldNotAdd = new Array(currentRow[column].length).fill(false);\n        const nextColumnStart = offset > 0 ? column + 1 : column - 1;\n\n        for (\n          let column2 = nextColumnStart;\n          column2 < currentRow.length && column2 >= 0;\n          column2 += columnStep\n        ) {\n          if (currentRow[column] === 0 && currentRow[column2] !== 0) {\n            currentRow[column] = currentRow[column2];\n            currentRow[column2] = 0;\n\n            continue;\n          }\n\n          if (\n            currentRow[column] !== 0 &&\n            currentRow[column] === currentRow[column2] &&\n            !shouldNotAdd[row]\n          ) {\n            currentRow[column] += currentRow[column2];\n            shouldNotAdd[row] = true;\n            this.score += currentRow[column];\n\n            currentRow[column2] = 0;\n          }\n\n          if (\n            currentRow[column] !== 0 &&\n            currentRow[column2] !== 0 &&\n            currentRow[column] !== currentRow[column2]\n          ) {\n            shouldNotAdd[row] = true;\n          }\n        }\n      }\n    }\n  }\n\n  #moveRowWithOffset(offset) {\n    const rowStart = offset > 0 ? 0 : this.state.length - 1;\n    const rowStep = normalize(offset);\n\n    for (\n      let row = rowStart;\n      row < this.state.length && row >= 0;\n      row += rowStep\n    ) {\n      const shouldNotAdd = new Array(this.state[row].length).fill(false);\n      const currentRow = this.state[row];\n\n      const nextRowStart = offset > 0 ? row + 1 : row - 1;\n\n      for (\n        let row2 = nextRowStart;\n        row2 < this.state.length && row2 >= 0;\n        row2 += rowStep\n      ) {\n        const nextRow = this.state[row2];\n\n        for (let column = 0; column < currentRow.length; column++) {\n          if (currentRow[column] === 0 && nextRow[column] !== 0) {\n            currentRow[column] = nextRow[column];\n            nextRow[column] = 0;\n\n            continue;\n          }\n\n          if (\n            currentRow[column] !== 0 &&\n            currentRow[column] === nextRow[column] &&\n            !shouldNotAdd[column]\n          ) {\n            currentRow[column] += nextRow[column];\n            shouldNotAdd[column] = true;\n\n            this.score += currentRow[column];\n\n            nextRow[column] = 0;\n            continue;\n          }\n\n          if (\n            currentRow[column] !== 0 &&\n            nextRow[column] !== 0 &&\n            currentRow[column] !== nextRow[column]\n          ) {\n            shouldNotAdd[column] = true;\n          }\n        }\n      }\n    }\n  }\n\n  #moveWithOffset(offsetColumn, offsetRow = 0) {\n    if (this.status !== 'playing' && this.status !== 'idle') {\n      return;\n    }\n\n    const lastState = this.state.toString();\n\n    if (offsetRow) {\n      this.#moveRowWithOffset(offsetRow);\n    } else {\n      this.#moveColumnWithOffset(offsetColumn);\n    }\n\n    this.#checkGameBoard();\n\n    if (lastState === this.state.toString()) {\n      return;\n    }\n\n    this.#randomSpawn();\n  }\n\n  moveLeft() {\n    this.#moveWithOffset(1);\n  }\n  moveRight() {\n    this.#moveWithOffset(-1);\n  }\n  moveUp() {\n    this.#moveWithOffset(0, 1);\n  }\n  moveDown() {\n    this.#moveWithOffset(0, -1);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.restart();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.status = STATUS_PLAYING;\n    this.state = cloneState(this.initialState);\n    this.score = INITIAL_SCORE;\n\n    this.#randomSpawn();\n    this.#randomSpawn();\n  }\n\n  // Add your own methods here\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","export function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nexport function _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","export function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$ac6739cbe5bf1c84$export$ccedaf978f62b9dd","receiver","privateSet","fn","has","TypeError","$ea91727f98d0802f$export$1002c20f28174dbf","obj","privateCollection","add","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$3d28d7f1aac198f5$var$INITIAL_STATE","$3d28d7f1aac198f5$var$cloneState","state","map","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","$3d28d7f1aac198f5$var$normalize","value","$3d28d7f1aac198f5$var$_checkGameBoard","WeakSet","$3d28d7f1aac198f5$var$_getEmptyCells","$3d28d7f1aac198f5$var$_randomSpawn","$3d28d7f1aac198f5$var$_moveColumnWithOffset","$3d28d7f1aac198f5$var$_moveRowWithOffset","$3d28d7f1aac198f5$var$_moveWithOffset","$3d28d7f1aac198f5$var$checkGameBoard","hasAvailableMoves","row","column","status","$3d28d7f1aac198f5$var$getEmptyCells","emptyCells","push","$3d28d7f1aac198f5$var$randomSpawn","randomEmptyCell","Math","floor","random","$3d28d7f1aac198f5$var$moveColumnWithOffset","offset","columnStart","columnStep","currentRow","shouldNotAdd","fill","nextColumnStart","column2","score","$3d28d7f1aac198f5$var$moveRowWithOffset","rowStart","rowStep","nextRowStart","row2","nextRow","$3d28d7f1aac198f5$var$moveWithOffset","offsetColumn","offsetRow","arguments","lastState","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","key","restart","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$rows","document","querySelectorAll","$197cd56b15c33885$var$button","querySelector","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$BUTTON_CLASS_RESTART","$197cd56b15c33885$var$BUTTON_CLASS_START","$197cd56b15c33885$var$showStartButton","$197cd56b15c33885$var$update","getState","children","replaceChildren","newCell","createElement","textContent","classList","concat","getStatus","remove","getScore","addEventListener","confirm","start","e","pressedArrows","moveUp","moveDown","moveLeft","moveRight","evt","firstTouch","$197cd56b15c33885$var$getTouches","touches","originalEvent","$197cd56b15c33885$var$xDown","clientX","$197cd56b15c33885$var$yDown","clientY","xUp","yUp","xDiff","yDiff","abs"],"version":3,"file":"index.6b2bb3bb.js.map"}